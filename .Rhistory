Maisons_6_ventes
Appartement_6_ventes <- ggplot(revendues_2017_2018_2019_2020_2021_2022_Appartement_Vente)+geom_point(aes (x=revendues_2017_2018_2019_2020_2021_2022_Appartement_Vente$longitude,y=revendues_2017_2018_2019_2020_2021_2022_Appartement_Vente$latitude))+coord_map(projection="lambert",lat0=42,lat1=52,xlim = c(-4.5,9.5), ylim = c(41.5, 51))
Appartement_6_ventes
source("~/GitHub/Projet_Stat/Code_DVF.R", echo=TRUE)
nombre_transactions <- function(x){
permu <- as.data.frame(combn(liste_annees, x))
for (k in 1:length(permu)){
permu_actuelle <- permu[,k]
for (i in permu_actuelle){
print(i)
}
}
}
nombre_transactions(6)
liste_annees <- c("2017","2018","2019","2020","2021","2022")
permu <- combn(liste_annees, 5)
nombre_transactions(6)
nombre_transactions(5)
assign("2017", DVF_2017)
assign("2018", DVF_2018)
assign("2019", DVF_2019)
assign("2020", DVF_2020)
assign("2021", DVF_2021)
assign("2022", DVF_2022)
liste_annees <- c("2017","2018","2019","2020","2021","2022")
gc()
liste_annees
nombre_transactions(5)
nombre_transactions(6)
"2017"
assign("2017", DVF_2017)
liste_annees <- c("2017","2018","2019","2020","2021","2022")
"2017"
assign("2017", DVF_2017)
2017
"2017"
get("2017")
nombre_transactions <- function(x){
permu <- as.data.frame(combn(liste_annees, x))
for (k in 1:length(permu)){
permu_actuelle <- permu[,k]
for (i in permu_actuelle){
annee_current=get(i)
print(i)
if (i==permu_actuelle[1]){
liste_parcelle <- unique(get(i)$id_parcelle)
}
else{
revendue <- annee_current[annee_current$id_parcelle %in% liste_parcelle,]
liste_parcelle <- unique(revendue$id_parcelle)
}
}
biens_totaux <- revendues
return(biens_totaux,liste_parcelle)
}
}
assign("2017", DVF_2017)
assign("2018", DVF_2018)
assign("2019", DVF_2019)
assign("2020", DVF_2020)
assign("2021", DVF_2021)
assign("2022", DVF_2022)
nombre_transactions(6)
nombre_transactions <- function(x){
permu <- as.data.frame(combn(liste_annees, x))
for (k in 1:length(permu)){
permu_actuelle <- permu[,k]
for (i in permu_actuelle){
annee_current=get(i)
print(i)
if (i==permu_actuelle[1]){
liste_parcelle <- unique(get(i)$id_parcelle)
}
else{
revendue <- annee_current[annee_current$id_parcelle %in% liste_parcelle,]
liste_parcelle <- unique(revendue$id_parcelle)
}
}
biens_totaux <- revendue
return(biens_totaux,liste_parcelle)
}
}
nombre_transactions(6)
nombre_transactions <- function(x){
permu <- as.data.frame(combn(liste_annees, x))
for (k in 1:length(permu)){
permu_actuelle <- permu[,k]
for (i in permu_actuelle){
annee_current=get(i)
print(i)
if (i==permu_actuelle[1]){
liste_parcelle <- unique(get(i)$id_parcelle)
}
else{
revendue <- annee_current[annee_current$id_parcelle %in% liste_parcelle,]
liste_parcelle <- unique(revendue$id_parcelle)
}
}
biens_totaux <- revendue
return(biens_totaux)
}
}
nombre_transactions(6)
test_six_biens <- nombre_transactions(6)
bind(,DVF_2017)
rbind(,DVF_2017)
initialisation <-  data.frame(matrix(nrow = 0, ncol = length(DVF_2017)))
initialisation
columns = names(DVF_2017)
initialisation = data.frame(matrix(nrow = 0, ncol = length(columns)))
colnames(initialisation) = columns
initialisation
nombre_transactions <- function(x){
columns = names(DVF_2017)
biens_immo = data.frame(matrix(nrow = 0, ncol = length(columns)))
colnames(biens_immo) = columns
permu <- as.data.frame(combn(liste_annees, x))
for (k in 1:length(permu)){
permu_actuelle <- permu[,k]
for (i in permu_actuelle){
annee_current=get(i)
print(i)
if (i==permu_actuelle[1]){
liste_parcelle <- unique(get(i)$id_parcelle)
}
else{
revendue <- annee_current[annee_current$id_parcelle %in% liste_parcelle,]
liste_parcelle <- unique(revendue$id_parcelle)
}
}
biens_immo <- bind(biens_immo,revendue)
}
finit_transaction=biens_immo[!biens_immo$id_parcelle %in% test_six_biens$id_parcelle]
return(finit_transaction)
}
nombre_transactions(5)
nombre_transactions <- function(x){
columns = names(DVF_2017)
biens_immo = data.frame(matrix(nrow = 0, ncol = length(columns)))
colnames(biens_immo) = columns
permu <- as.data.frame(combn(liste_annees, x))
for (k in 1:length(permu)){
permu_actuelle <- permu[,k]
for (i in permu_actuelle){
annee_current=get(i)
print(i)
if (i==permu_actuelle[1]){
liste_parcelle <- unique(get(i)$id_parcelle)
}
else{
revendue <- annee_current[annee_current$id_parcelle %in% liste_parcelle,]
liste_parcelle <- unique(revendue$id_parcelle)
}
}
biens_immo <- rbind(biens_immo,revendue)
}
finit_transaction=biens_immo[!biens_immo$id_parcelle %in% test_six_biens$id_parcelle]
return(finit_transaction)
}
nombre_transactions(6)
test_5_ventes <- nombre_transactions(5)
test_six_biens$id_parcelle
nombre_transactions <- function(x){
columns = names(DVF_2017)
biens_immo = data.frame(matrix(nrow = 0, ncol = length(columns)))
colnames(biens_immo) = columns
permu <- as.data.frame(combn(liste_annees, x))
for (k in 1:length(permu)){
permu_actuelle <- permu[,k]
for (i in permu_actuelle){
annee_current=get(i)
print(i)
if (i==permu_actuelle[1]){
liste_parcelle <- unique(get(i)$id_parcelle)
}
else{
revendue <- annee_current[annee_current$id_parcelle %in% liste_parcelle,]
liste_parcelle <- unique(revendue$id_parcelle)
}
}
biens_immo <- rbind(biens_immo,revendue)
print('un de plus')
}
return(biens_immo)
finit_transaction=biens_immo[!biens_immo$id_parcelle %in% test_six_biens$id_parcelle,]
return(finit_transaction)
}
test_5_ventes <- nombre_transactions(5)
liste_parcelle_2017=unique(DVF_2017$id_parcelle)
revendues_2017_2018 <- DVF_2018[DVF_2018$id_parcelle %in% liste_parcelle_2017,]
liste_parcelle_2017_2018=unique(revendues_2017_2018$id_parcelle)
revendues_2017_2018_2019 <- DVF_2019[DVF_2019$id_parcelle %in% liste_parcelle_2017_2018,]
liste_parcelle_2017_2018_2019=unique(revendues_2017_2018_2019$id_parcelle)
revendues_2017_2018_2019_2020 <- DVF_2020[DVF_2020$id_parcelle %in% liste_parcelle_2017_2018_2019,]
liste_parcelle_2017_2018_2019_2020=unique(revendues_2017_2018_2019_2020$id_parcelle)
pr_morceau_revendues_2017_2018_2019_2020_2021 <- DVF_2021[DVF_2021$id_parcelle %in% liste_parcelle_2017_2018_2019_2020,]
liste_parcelle_2017=unique(DVF_2017$id_parcelle)
revendues_2017_2018 <- DVF_2018[DVF_2018$id_parcelle %in% liste_parcelle_2017,]
liste_parcelle_2017_2018=unique(revendues_2017_2018$id_parcelle)
revendues_2017_2018_2019 <- DVF_2019[DVF_2019$id_parcelle %in% liste_parcelle_2017_2018,]
liste_parcelle_2017_2018_2019=unique(revendues_2017_2018_2019$id_parcelle)
revendues_2017_2018_2019_2020 <- DVF_2020[DVF_2020$id_parcelle %in% liste_parcelle_2017_2018_2019,]
liste_parcelle_2017_2018_2019_2020=unique(revendues_2017_2018_2019_2020$id_parcelle)
pr_morceau_revendues_2017_2018_2019_2020_2022 <- DVF_2022[DVF_2022$id_parcelle %in% liste_parcelle_2017_2018_2019_2020,]
liste_parcelle_2017=unique(DVF_2017$id_parcelle)
revendues_2017_2018 <- DVF_2018[DVF_2018$id_parcelle %in% liste_parcelle_2017,]
liste_parcelle_2017_2018=unique(revendues_2017_2018$id_parcelle)
revendues_2017_2018_2019 <- DVF_2019[DVF_2019$id_parcelle %in% liste_parcelle_2017_2018,]
liste_parcelle_2017_2018_2019=unique(revendues_2017_2018_2019$id_parcelle)
revendues_2017_2018_2019_2021 <- DVF_2021[DVF_2021$id_parcelle %in% liste_parcelle_2017_2018_2019,]
liste_parcelle_2017_2018_2019_2021=unique(revendues_2017_2018_2019_2021$id_parcelle)
pr_morceau_revendues_2017_2018_2019_2021_2022 <- DVF_2022[DVF_2022$id_parcelle %in% liste_parcelle_2017_2018_2019_2021,]
liste_parcelle_2017=unique(DVF_2017$id_parcelle)
revendues_2017_2018 <- DVF_2018[DVF_2018$id_parcelle %in% liste_parcelle_2017,]
liste_parcelle_2017_2018=unique(revendues_2017_2018$id_parcelle)
revendues_2017_2018_2020 <- DVF_2020[DVF_2020$id_parcelle %in% liste_parcelle_2017_2018,]
liste_parcelle_2017_2018_2020=unique(revendues_2017_2018_2020$id_parcelle)
revendues_2017_2018_2020_2021 <- DVF_2021[DVF_2021$id_parcelle %in% liste_parcelle_2017_2018_2020,]
liste_parcelle_2017_2018_2020_2021=unique(revendues_2017_2018_2020_2021$id_parcelle)
pr_morceau_revendues_2017_2018_2020_2021_2022 <- DVF_2022[DVF_2022$id_parcelle %in% liste_parcelle_2017_2018_2020_2021,]
liste_parcelle_2017=unique(DVF_2017$id_parcelle)
revendues_2017_2019 <- DVF_2019[DVF_2019$id_parcelle %in% liste_parcelle_2017,]
liste_parcelle_2017_2019=unique(revendues_2017_2019$id_parcelle)
revendues_2017_2019_2020 <- DVF_2020[DVF_2020$id_parcelle %in% liste_parcelle_2017_2019,]
liste_parcelle_2017_2019_2020=unique(revendues_2017_2019_2020$id_parcelle)
revendues_2017_2019_2020_2021 <- DVF_2021[DVF_2021$id_parcelle %in% liste_parcelle_2017_2019_2020,]
liste_parcelle_2017_2019_2020_2021=unique(revendues_2017_2019_2020_2021$id_parcelle)
pr_morceau_revendues_2017_2019_2020_2021_2022 <- DVF_2022[DVF_2022$id_parcelle %in% liste_parcelle_2017_2019_2020_2021,]
liste_parcelle_2018=unique(DVF_2018$id_parcelle)
revendues_2018_2019 <- DVF_2019[DVF_2019$id_parcelle %in% liste_parcelle_2018,]
liste_parcelle_2018_2019=unique(revendues_2018_2019$id_parcelle)
revendues_2018_2019_2020 <- DVF_2020[DVF_2020$id_parcelle %in% liste_parcelle_2018_2019,]
liste_parcelle_2018_2019_2020=unique(revendues_2018_2019_2020$id_parcelle)
revendues_2018_2019_2020_2021 <- DVF_2021[DVF_2021$id_parcelle %in% liste_parcelle_2018_2019_2020,]
liste_parcelle_2018_2019_2020_2021=unique(revendues_2018_2019_2020_2021$id_parcelle)
pr_morceau_revendues_2018_2019_2020_2021_2022 <- DVF_2022[DVF_2022$id_parcelle %in% liste_parcelle_2018_2019_2020_2021,]
union=rbind(pr_morceau_revendues_2018_2019_2020_2021_2022,
pr_morceau_revendues_2017_2019_2020_2021_2022,
pr_morceau_revendues_2017_2018_2019_2020_2021,
pr_morceau_revendues_2017_2018_2019_2021_2022,
pr_morceau_revendues_2017_2018_2020_2021_2022,
pr_morceau_revendues_2017_2018_2019_2020_2022)
cinq_transactions=union[!union$id_parcelle %in% revendues_2017_2018_2019_2020_2021_2022$id_parcelle]
cinq_transactions=union[!union$id_parcelle %in% revendues_2017_2018_2019_2020_2021_2022$id_parcelle,]
length(unique(test_5_ventes$id_parcelle))
length(unique(cinq_transactions$id_parcelle))
length(unique(test_six_biens$id_parcelle))
length(unique(revendues_2017_2018_2019_2020_2021_2022$id_parcelle))
dans_2017 <- test_5_ventes[!(test_5_ventes$id_parcelle %in% DVF_2017$id_parcelle),]
dans_2018 <- test_5_ventes[!(test_5_ventes$id_parcelle %in% DVF_2018$id_parcelle),]
dans_2019 <- test_5_ventes[!(test_5_ventes$id_parcelle %in% DVF_2019$id_parcelle),]
dans_2020 <- test_5_ventes[!(test_5_ventes$id_parcelle %in% DVF_2020$id_parcelle),]
dans_2021 <- test_5_ventes[!(test_5_ventes$id_parcelle %in% DVF_2021$id_parcelle),]
dans_2022 <- test_5_ventes[!(test_5_ventes$id_parcelle %in% DVF_2022$id_parcelle),]
test_six_biens=revendues_2017_2018_2019_2020_2021_2022
nombre_transactions <- function(x){
columns = names(DVF_2017)
biens_immo = data.frame(matrix(nrow = 0, ncol = length(columns)))
colnames(biens_immo) = columns
permu <- as.data.frame(combn(liste_annees, x))
for (k in 1:length(permu)){
permu_actuelle <- permu[,k]
for (i in permu_actuelle){
annee_current=get(i)
print(i)
if (i==permu_actuelle[1]){
liste_parcelle <- unique(get(i)$id_parcelle)
}
else{
revendue <- annee_current[annee_current$id_parcelle %in% liste_parcelle,]
liste_parcelle <- unique(revendue$id_parcelle)
}
}
biens_immo <- rbind(biens_immo,revendue)
print('un de plus')
}
finit_transaction=biens_immo[!biens_immo$id_parcelle %in% test_six_biens$id_parcelle,]
return(finit_transaction)
}
test_cinq_biens <-nombre_transactions(5)
save(test_cinq_biens,file="biens_vendus_cinq_fois.RData")
save(revendues_2017_2018_2019_2020_2021_2022,file="biens_vendus_six_fois.RData")
View(test_cinq_biens)
table(test_cinq_biens$code_departement)
table(test_six_biens$code_departement)
read_OGR()
library("rgdal")
install.packages("rgdal")
library("rgdal")
read_OGR(dsn="C:/Users/Maxime/Documents/Fichier SIG/France/Departement_fr",layer="departements-20180101")
library("rgdal")
read_OGR(dsn="C:/Users/Maxime/Documents/Fichier SIG/France/Departement_fr",layer="departements-20180101")
readOGR(dsn="C:/Users/Maxime/Documents/Fichier SIG/France/Departement_fr",layer="departements-20180101")
departement <- readOGR(dsn="C:/Users/Maxime/Documents/Fichier SIG/France/Departement_fr",layer="departements-20180101")
View(departement)
plot(departement)
gc()
departements <- read_sf("C:/Users/Maxime/Documents/Fichier SIG/France/Departement_fr/departements-20180101.shp")
library(sf)
install.packages("sf")
library("sf")
departements <- read_sf("C:/Users/Maxime/Documents/Fichier SIG/France/Departement_fr/departements-20180101.shp")
u <- ggplot(departements) + geom_sf(aes(colour = Duration))
u
u <- ggplot(departements) + geom_sf(aes(colour = surf_km2))
u
u <- ggplot(departements) + geom_sf(aes(colour = surf_km2))+coord_map(projection="lambert",lat0=42,lat1=52,xlim = c(-4.5,9.5), ylim = c(41.5, 51))
u
u <- ggplot(departements) + geom_sf(aes(colour = surf_km2))+coord_sf(projection="lambert",lat0=42,lat1=52,xlim = c(-4.5,9.5), ylim = c(41.5, 51))
View(departements)
departements <- departements[length(departements$code_insee)==2,]
u <- ggplot(departements) + geom_sf(aes(colour = surf_km2))
u
departements <- read_sf("C:/Users/Maxime/Documents/Fichier SIG/France/Departement_fr/departements-20180101.shp")
View(departements)
length(departements$code_insee)
departements <- departements[!departements$nom %in % c("Mayotte", "La Réunion", "Guadeloupe", "Martinique", "Guyane"),]
departements <- departements[!departements$nom %in% c("Mayotte", "La Réunion", "Guadeloupe", "Martinique", "Guyane"),]
u <- ggplot(departements) + geom_sf(aes(colour = surf_km2))
View(departements)
u
u <- ggplot(departements) + geom_sf(aes(fill = surf_km2))
u
save(departements,file="departements.RData")
DVF_2022=read.csv("C://Users/Maxime/Documents/ING3/Projet_DVF/DVF_2022.csv")
gc()
load("~/GitHub/Projet_Stat/departements.RData")
load("~/GitHub/Projet_Stat/biens_vendus_six_fois.RData")
load("~/GitHub/Projet_Stat/biens_vendus_six_fois.RData")
load("~/GitHub/Projet_Stat/biens_vendus_cinq_fois.RData")
liste_biens_department <- as.dataframe(table(revendues_2017_2018_2019_2020_2021_2022$code_departement))
liste_biens_department <- as.data.frame(table(revendues_2017_2018_2019_2020_2021_2022$code_departement))
View(liste_biens_department)
View(departements)
departements_biens <- merge(departements,liste_biens_department,by.x=code_insee,by.y=Var1)
View(departements)
departements_biens <- merge(departements,liste_biens_department,by.x="code_insee",by.y="Var1")
u <- ggplot(departements_biens) + geom_sf(aes(fill = Freq))
library("ggplot2")
u <- ggplot(departements_biens) + geom_sf(aes(fill = Freq))
u
library("sf")
u
View(departements_biens)
departement <- readOGR(dsn="C:/Users/Maxime/Documents/Fichier SIG/France/Departement_fr",layer="departements-20180101")
library("rgdal")
departement <- readOGR(dsn="C:/Users/Maxime/Documents/Fichier SIG/France/Departement_fr",layer="departements-20180101")
departements_biens <- merge(departement,liste_biens_department,by.x="code_insee",by.y="Var1")
u <- ggplot(departements_biens) + geom_sf(aes(fill = Freq))
u
u <- ggplot(departements_biens) + geom_sf(aes(fill = "Freq"))
u
departements <- read_sf("C:/Users/Maxime/Documents/Fichier SIG/France/Departement_fr/departements-20180101.shp")
departements <- departements[!departements$nom %in% c("Mayotte", "La Réunion", "Guadeloupe", "Martinique", "Guyane"),]
u <- ggplot(departements) + geom_sf(aes(fill = "surf_km2"))
u
plot(departements_biens)
View(departements_biens)
departements_bien <- departements_bien[!departements_bien$nom %in% c("Mayotte", "La Réunion", "Guadeloupe", "Martinique", "Guyane"),]
departements_biens <- departements_biens[!departements_bien$nom %in% c("Mayotte", "La Réunion", "Guadeloupe", "Martinique", "Guyane"),]
departements_biens <- departements_biens[!departements_biens$nom %in% c("Mayotte", "La Réunion", "Guadeloupe", "Martinique", "Guyane"),]
plot(departements_biens)
Maisons_6_ventes <- ggplot(revendues_2017_2018_2019_2020_2021_2022_Maison_Vente)+geom_point(aes (x=revendues_2017_2018_2019_2020_2021_2022_Maison_Vente$longitude,y=revendues_2017_2018_2019_2020_2021_2022_Maison_Vente$latitude))+coord_cartesian(xlim = c(-4.5,9.5), ylim = c(41.5, 51))
Maisons_5_ventes <- ggplot(test_cinq_biens)+geom_point(aes (x=test_cinq_biens$longitude,y=test_cinq_biens$latitude))+coord_map(projection="lambert",lat0=42,lat1=52,xlim = c(-4.5,9.5), ylim = c(41.5, 51))
Maisons_5_ventes
Maisons_5_ventes <- ggplot(revendues_2017_2018_2019_2020_2021)+geom_point(aes (x=revendues_2017_2018_2019_2020_2021$longitude,y=revendues_2017_2018_2019_2020_2021$latitude))+coord_map(projection="lambert",lat0=42,lat1=52,xlim = c(-4.5,9.5), ylim = c(41.5, 51))
Maisons_5_ventes <- ggplot(revendues_2017_2018_2019_2020_2021)+geom_point(aes (x=revendues_2017_2018_2019_2020_2021$longitude,y=revendues_2017_2018_2019_2020_2021_2022$latitude))+coord_map(projection="lambert",lat0=42,lat1=52,xlim = c(-4.5,9.5), ylim = c(41.5, 51))
Maisons_5_ventes <- ggplot(revendues_2017_2018_2019_2020_2021_2022)+geom_point(aes (x=revendues_2017_2018_2019_2020_2021_2022$longitude,y=revendues_2017_2018_2019_2020_2021_2022$latitude))+coord_map(projection="lambert",lat0=42,lat1=52,xlim = c(-4.5,9.5), ylim = c(41.5, 51))
Maisons_5_ventes
revendues_2017_2018_2019_2020_2021_2022 <- revendues_2017_2018_2019_2020_2021_2022[revendues_2017_2018_2019_2020_2021_2022$nature_mutation='Vente' & revendues_2017_2018_2019_2020_2021_2022$type_local='Maison',]
revendues_2017_2018_2019_2020_2021_2022 <- revendues_2017_2018_2019_2020_2021_2022[revendues_2017_2018_2019_2020_2021_2022$nature_mutation=='Vente' & revendues_2017_2018_2019_2020_2021_2022$type_local=='Maison',]
Maisons_5_ventes <- ggplot(revendues_2017_2018_2019_2020_2021_2022)+geom_point(aes (x=revendues_2017_2018_2019_2020_2021_2022$longitude,y=revendues_2017_2018_2019_2020_2021_2022$latitude))+coord_map(projection="lambert",lat0=42,lat1=52,xlim = c(-4.5,9.5), ylim = c(41.5, 51))
Maisons_5_ventes
View(departements_biens)
shapefile_df <- fortify(departements_biens)
# Now the shapefile can be plotted as either a geom_path or a geom_polygon.
# Paths handle clipping better. Polygons can be filled.
# You need the aesthetics long, lat, and group.
map <- ggplot() +
geom_path(data = shapefile_df,
aes(x = long, y = lat, group = group),
color = 'gray', fill = 'white', size = .2)
print(map)
# Now the shapefile can be plotted as either a geom_path or a geom_polygon.
# Paths handle clipping better. Polygons can be filled.
# You need the aesthetics long, lat, and group.
map <- ggplot() +
geom_path(data = shapefile_df,
aes(x = long, y = lat, group = group),
color = 'gray', fill = 'Freq', size = .2)
print(map)
View(shapefile_df)
shapefile_df <- fortify(departements_biens)
View(shapefile_df)
get("2017")
View(revendues_2017_2018_2019_2020_2021_2022)
View(test_cinq_biens)
liste_parcelle_2017=unique(DVF_2017$id_parcelle)
adresse_complete=unique(paste0(revendues_2017_2018_2019_2020_2021_2022$adresse_numero,revendues_2017_2018_2019_2020_2021_2022$adresse_nom_voie,revendues_2017_2018_2019_2020_2021_2022$code_commune))
adresse_complete
DVF_2022=read.csv("C://Users/Maxime/Documents/ING3/Projet_DVF/DVF_2022.csv")
DVF_2021=read.csv("C://Users/Maxime/Documents/ING3/Projet_DVF/DVF_2021.csv")
DVF_2020=read.csv("C://Users/Maxime/Documents/ING3/Projet_DVF/DVF_2020.csv")
DVF_2019=read.csv("C://Users/Maxime/Documents/ING3/Projet_DVF/DVF_2019.csv")
DVF_2018=read.csv("C://Users/Maxime/Documents/ING3/Projet_DVF/DVF_2018.csv")
DVF_2017=read.csv("C://Users/Maxime/Documents/ING3/Projet_DVF/DVF_2017.csv")
assign("2017", DVF_2017)
assign("2018", DVF_2018)
assign("2019", DVF_2019)
assign("2020", DVF_2020)
assign("2021", DVF_2021)
assign("2022", DVF_2022)
liste_annees <- c("2017","2018","2019","2020","2021","2022")
nombre_transactions <- function(x){
columns = names(DVF_2017)
biens_immo = data.frame(matrix(nrow = 0, ncol = length(columns)))
colnames(biens_immo) = columns
permu <- as.data.frame(combn(liste_annees, x))
for (k in 1:length(permu)){
permu_actuelle <- permu[,k]
for (i in permu_actuelle){
annee_current=get(i)
print(i)
if (i==permu_actuelle[1]){
#liste_parcelle <- unique(annee_current$id_parcelle)
adresse_complete=unique(paste0(annee_current$adresse_numero,annee_current$adresse_nom_voie,annee_current$code_commune))
}
else{
revendue <- annee_current[paste0(annee_current$adresse_numero,annee_current$adresse_nom_voie,annee_current$code_commune) %in% adresse_complete,]
adresse_complete <- unique(paste0(revendue$adresse_numero,revendue$adresse_nom_voie,revendue$code_commune))
}
}
biens_immo <- rbind(biens_immo,revendue)
print('un de plus')
}
#finit_transaction=biens_immo[!biens_immo$id_parcelle %in% test_six_biens$id_parcelle,]
return(biens_immo)
}
nombre_transactions(6)
test_encore <- nombre_transactions(6)
View(test_encore)
test_encore=test_encore[test_encore$nature_mutation=='Vente' & test_encore$type_local='Maison']
test_encore_vente_maison=test_encore[test_encore$nature_mutation=='Vente' & test_encore$type_local=='Maison']
test_encore_vente_maison=test_encore[test_encore$nature_mutation=='Vente' & test_encore$type_local=='Maison',]
View(test_encore_vente_maison)
maison_vente <- ggplot(test_encore_vente_maison)+geom_point(geom_point(aes (x=longitude,y=latitude))+coord_cartesian(xlim = c(-4.5,9.5), ylim = c(41.5, 51)))
maison_vente <- ggplot(test_encore_vente_maison)+geom_point(aes (x=longitude,y=latitude))+coord_cartesian(xlim = c(-4.5,9.5), ylim = c(41.5, 51)))
maison_vente <- ggplot(test_encore_vente_maison)+geom_point(aes (x=longitude,y=latitude))+coord_cartesian(xlim = c(-4.5,9.5), ylim = c(41.5, 51))
maison_vente
hist(DVF_2017$date_mutation)
DVF_2017$date_mutation <- as.date(DVF_2017$date_mutation)
DVF_2017$date_mutation <- as.Date(DVF_2017$date_mutation,"%Y-%m-%d")
View(DVF_2017)
DVF_2017$date_mutation
class(DVF_2017$date_mutation)
hist(DVF_2017$date_mutation)
hist(DVF_2017$date_mutation,breaks=100)
hist(DVF_2017$date_mutation,breaks=1000)
hist(DVF_2017$date_mutation,breaks=365)
load("~/GitHub/Projet_Stat/biens_vendus_six_fois.RData")
departement <- readOGR(dsn="C:/Users/Maxime/Documents/R/hebergements-classes",layer="hebergements-classe")
library("rgdal")
poi <- readOGR(dsn="C:/Users/Maxime/Documents/R/hebergements-classes",layer="hebergements-classe")
poi <- readOGR(dsn="C:/Users/Maxime/Documents/R/hebergements-classes",layer="hebergements-classes")
View(poi)
save(poi,"poi.RData")
save(poi,file="poi.RData")
poi$adresse
poi=poi[!poi$nom_commerce %in% "HOTEL",]
View(poi)
poi <- readOGR(dsn="C:/Users/Maxime/Documents/R/hebergements-classes",layer="hebergements-classes")
load("~/GitHub/Projet_Stat/poi.RData")
View(poi)
poi_non_hotel=poi[!poi$nom_commerce %like% "HÔTEL",]
poi_non_hotel=poi[!poi$nom_commerce %Like% "HÔTEL",]
poi_non_hotel=poi[!poi$nom_commerce %LIKE% "HÔTEL",]
poi_non_hotel=poi[!poi@data$nom_commerce %like% "HÔTEL",]
u %like "u"
u %like% "u"
library(data.table)
library("curl")
library("R.utils")
library("tidyr")
library("dplyr")
library("ggplot2")
library("arrangements")
library("gtools")
library("combinat")
poi_non_hotel=poi[!poi@data$nom_commerce %like% "HÔTEL",]
View(poi_non_hotel)
poi_non_hotel=poi[poi@data$nom_commerce %like% "HÔTEL",]
poi_non_hotel=poi[poi@data$nom_commerce %in% "HÔTEL",]
poi_non_hotel=poi[!poi@data$nom_commerce %in% "HÔTEL",]
poi$nom_commerc
poi_non_hotel=poi[!poi@data$nom_commerc %in% "HÔTEL",]
View(poi_non_hotel)
poi_non_hotel=poi[poi@data$nom_commerc %in% "HÔTEL",]
View(poi_non_hotel)
poi_non_hotel=poi[!poi@data$nom_commerc %like% "HÔTEL",]
View(poi_non_hotel)
poi_non_hotel$nom_commerc
df <- poi_non_hotel@data
View(df)
poi_vrai_non_hotel=poi[poi@data$typologie_e %like% "HÔTEL",]
unique(df$typologie_e)
poi <- readOGR(dsn="C:/Users/Maxime/Documents/R/hebergements-classes",layer="vrai_hebergements-classes")
poi <- readOGR(dsn="C:/Users/Maxime/Documents/R",layer="vrai_hebergements-classes")
save(poi,file="poi.RData")
poi_vrai_non_hotel=poi[poi@data$typologie_e %like% "HÔTEL",]
View(poi)
load("~/GitHub/Projet_Stat/poi.RData")
load("~/GitHub/Projet_Stat/poi.RData")
